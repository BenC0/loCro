$mobile-width: 450px;
$tablet-width: 768px;

@mixin replace_copy($text, $color, $font-size) {
	font-size: 0;
	color: transparent;

	&::before {
		content: $text;
		color: $color;
		font-size: $font-size;
		@content;
	}
}

@mixin clearfix {
	&::after {
		clear: both;
		content: ' ';
		display: table;
	}
}

/// Computes a top-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function top-shadow($depth) {
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
  $blur: nth(1.5 3 10 14 19, $depth) * 4px;
  $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));

  @return 0 $primary-offset $blur $color;
}

/// Computes a bottom-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function bottom-shadow($depth) {
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
  $blur: nth(1 3 3 5 6, $depth) * 4px;
  $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

  @return 0 $primary-offset $blur $color;
}

/// Computes a shadow and hover for a card effect.
/// @param {Number} $i - depth level
/// @return {props and values}
@mixin level($i, $hover) {
	position: relative;
	transition: all 0.15s ease-out;
	@if $i != 0 {
		box-shadow: bottom-shadow($i), top-shadow($i);
	} @else {
		box-shadow: 0px 0px 0px 0px rgba(0,0,0,0.1);
	}

	@if $hover == true {
		&::after {
			content: "";
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			opacity: 0;
			z-index: 1;
			background: white;
			backface-visibility: hidden;
			transition: all 0.15s ease-out;
		}
		&:hover {
			box-shadow: bottom-shadow($i+1), top-shadow($i+1);

			&::after {
				opacity: 0.15;
			}
		}
	}
}

@mixin grid_pos($col, $row) {
	grid-column: $col;
	grid-row: $row;
}

@mixin max_mobile {
	@media screen and (max-width: $mobile-width) {
		@content;
	}
}

@mixin min_tablet {
	@media screen and (min-width: $mobile-width + 1) {
		@content;
	}
}

@mixin max_tablet {
	@media screen and (max-width: $tablet-width) {
		@content;
	}
}

@mixin min_desktop {
	@media screen and (min-width: $tablet-width + 1) {
		@content;
	}
}